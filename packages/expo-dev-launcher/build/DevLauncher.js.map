{"version":3,"file":"DevLauncher.js","sourceRoot":"","sources":["../src/DevLauncher.ts"],"names":[],"mappings":"AAKA,IAAI,yBAAyB,GAAG,KAAK,CAAC;AAEtC,MAAM,iCAAiC,GAAG;;;;mGAIyD,CAAC;AAEpG,MAAM,gCAAgC,GAAG;;;mGAG0D,CAAC;AAEpG,SAAS,2BAA2B,CAAC,KAAiB;IACpD,KAAK,CAAC,OAAO,IAAI,MAAM,GAAG,iCAAiC,CAAC;AAC9D,CAAC;AAED,SAAS,+BAA+B,CAAC,KAAY;IACnD,KAAK,CAAC,OAAO,GAAG;;EAEhB,gCAAgC,EAAE,CAAC;AACrC,CAAC;AAED,SAAS,cAAc,CAAC,KAAyB;IAC/C,IAAI,MAAM,IAAI,KAAK,EAAE;QACnB,sCAAsC;QACtC,QAAQ,KAAK,CAAC,IAAI,EAAE;YAClB,KAAK,iBAAiB,CAAC,CAAC;gBACtB,2BAA2B,CAAC,KAAK,CAAC,CAAC;gBACnC,MAAM;aACP;SACF;KACF;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,8BAA8B,CAAC,EAAE;QACjE,+BAA+B,CAAC,KAAK,CAAC,CAAC;KACxC;AACH,CAAC;AAED,SAAS,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO;IACtC,IAAI,KAAK,YAAY,KAAK,EAAE;QAC1B,cAAc,CAAC,KAAK,CAAC,CAAC;KACvB;IAED,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACrB,CAAC;AAED,MAAM,UAAU,qBAAqB;IACnC,IAAI,yBAAyB,EAAE;QAC7B,OAAO;KACR;IACD,yBAAyB,GAAG,IAAI,CAAC;IAEjC,MAAM,aAAa,GAAG,UAAU,CAAC,gBAAgB,EAAE,CAAC;IACpD,UAAU,CAAC,gBAAgB,CAAC,UAAS,GAAG,IAAI;QAC1C,YAAY,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { ErrorUtils } from 'react-native';\n\n// Similar interface to the one used in expo modules.\ntype CodedError = Error & { code?: string };\n\nlet errorHandlerWasRegistered = false;\n\nconst unavailableErrorPossibleSolutions = `Some possible solutions:\n- Make sure that the method is available on the current platform.\n- Make sure you're using the newest available version of this development client.\n- Make sure you're running a compatible version of your JavaScript code.\n- If you've installed a new library recently, you may need to make a new development client build.`;\n\nconst moduleIsMissingPossibleSolutions = `Some possible solutions:\n- Make sure you're using the newest available version of this development client.\n- Make sure you're running a compatible version of your JavaScript code.\n- If you've installed a new library recently, you may need to make a new development client build.`;\n\nfunction customizeUnavailableMessage(error: CodedError) {\n  error.message += '\\n\\n' + unavailableErrorPossibleSolutions;\n}\n\nfunction customizeModuleIsMissingMessage(error: Error) {\n  error.message = `Your JavaScript code tried to access a native module that doesn't exist in this development client. \n\n${moduleIsMissingPossibleSolutions}`;\n}\n\nfunction customizeError(error: Error | CodedError) {\n  if ('code' in error) {\n    // It's a CodedError from expo modules\n    switch (error.code) {\n      case 'ERR_UNAVAILABLE': {\n        customizeUnavailableMessage(error);\n        break;\n      }\n    }\n  } else if (error.message.includes('Native module cannot be null')) {\n    customizeModuleIsMissingMessage(error);\n  }\n}\n\nfunction errorHandler(fn, error, isFatal) {\n  if (error instanceof Error) {\n    customizeError(error);\n  }\n\n  fn(error, isFatal);\n}\n\nexport function registerErrorHandlers() {\n  if (errorHandlerWasRegistered) {\n    return;\n  }\n  errorHandlerWasRegistered = true;\n\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  ErrorUtils.setGlobalHandler(function(...args) {\n    errorHandler(globalHandler, ...args);\n  });\n}\n"]}